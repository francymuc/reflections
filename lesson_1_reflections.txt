How did viewing a diff between two versions of a file help you see the bug that was introduced?
Diff is focusing only on the differences between the last working file and the file with the bug,
so it is much easier to identify the bug

How could having easy access to the entire history of a file make you a more efficient
programmer in the long term?
its easier to experiment on new features and then easily go back to a working implementation

What do you think are the pros and cons of manually choosing when to create a commit,
like you do in Git, vs having versions automatically saved, like Google Docs does?
You can decide when to commiz a logical unit, a checkpoint,
or when a working program feature has been implemented when manually committing

Why do you think some version control systems, like Git, allow saving multiple files in one commit,
while others, like Google Docs, treat each file separately?

Git is focussing on programming, where in most cases there are more than 1 file
with dependencies between files

How can you use the commands git log and git diff to view the history of files?
Git log for a brief history about date, author and comments as well as a unique commit id.
Git diff two compare two commits in detail to see what changed, what was added, what was deleted

How might using version control make you more confident to make changes that could break something?
I can always go bck to a previous running checkpoint and start to investigate from there
what caused the broken code

Now that you have your workspace set up, what do you want to try using Git for?
I will try to use it first of all for the next lessons exercises, and then for my own projects
